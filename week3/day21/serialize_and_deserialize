 string serialize(TreeNode* root) {
        if(root==nullptr)return "";
        queue<TreeNode*> q;
        q.push(root);
        string ans = "";
        while(!q.empty())
        {
            TreeNode* temp = q.front();
            q.pop();
            if(temp!=nullptr)
            {
                ans+=to_string(temp->val)+",";
                q.push(temp->left);
                q.push(temp->right);
            }else {
                ans+="#";
                if(q.size()>0)ans+=',';
            }
        }
        cout<<ans;
        return ans;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        if(data=="")return nullptr;
        queue<TreeNode*> q;
        stringstream ss(data);
        string temp;
        getline(ss,temp,',');
        TreeNode* root= new TreeNode(stoi(temp));
        q.push(root);
        while(!q.empty())
        {
            TreeNode* node=q.front();q.pop();
            getline(ss,temp,',');
            if(temp=="#")node->left=nullptr;
            else {
                node->left=new TreeNode(stoi(temp));
                q.push(node->left);
            }
            
             getline(ss,temp,',');
            if(temp=="#")node->right=nullptr;
            else {
                node->right=new TreeNode(stoi(temp));
                q.push(node->right);
            }
        }
        return root;
    }