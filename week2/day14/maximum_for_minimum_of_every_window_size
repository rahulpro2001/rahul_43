#include<bits/stdc++.h>
vector<int> maxMinWindow(vector<int> a, int n) {
    
    vector<int> ans(n,INT_MIN);
    
    stack<int> st;
    
    vector<int> right,left,finall(n);
    
    for(int i=0;i<n;i++)
    {
        if(st.size()==0)left.push_back(-1);
        else if(a[st.top()]<a[i])left.push_back(st.top());
        else
        {
            while(st.size()>0 and a[st.top()]>=a[i])st.pop();
            if(st.size()==0)left.push_back(-1);
            else left.push_back(st.top());
        }
        st.push(i);
    }
    
    
    while(st.size())st.pop();
    
    for(int i=n-1;i>=0;i--)
    {
        if(st.size()==0)right.push_back(n);
        else if(a[st.top()]<a[i])right.push_back(st.top());
        else
        {
            while(st.size()>0 and a[st.top()]>=a[i])st.pop();
            if(st.size()==0)right.push_back(n);
            else right.push_back(st.top());
        }
        st.push(i);
    }
    
    reverse(right.begin(),right.end());
    
    for(int i=0;i<n;i++)finall[i] = right[i]-left[i] -2;
    for(int i=0;i<n;i++)ans[finall[i]] = max(ans[finall[i]],a[i]);
    for(int i = n-2;i>=0;i--)
    {
        if(ans[i]==INT_MIN)ans[i] = ans[i+1];
    }
    for(int i=0;i<n;i++)cout<<finall[i]<<" ";cout<<"\n";
//     for(int i=0;i<n;i++)/cout<<left[i]<<" ";
//         return {};
    return ans;
}